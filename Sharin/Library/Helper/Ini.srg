<?php
/**
 * Created by PhpStorm.
 * User: asus
 * Date: 16-10-11
 * Time: 下午2:30
 */

namespace Sharin\Library\Helper;

/**
 * Class Ini
 *
 * INI文件解析可以解析多维数组(方括号内的将被忽略)
 *  [Section1 Name]
 *  KeyName1=value1
 *  KeyName2=value2
 *  [Section2 Name]
 *  a.KeyName21=value21
 *  b.KeyName22=value22
 *  [Section3 Name]
 *  a.c.dKeyName21=value21
 * 的结果是：
 * [
 *     [
 *         'KeyName1' => 'value1',
 *         'KeyName2' => 'value2',
 *         'a'  => [
 *            'KeyName21' => 'value21',
 *            'c' => [
 *                    'dKeyName21' => 'value21',
 *                ],
 *         ],
 *         'b' => [
 *                  'KeyName22' => 'value22',
 *              ]
 *     ]
 * ]
 *
 * @package Sharin\Library\Helper
 */
class Ini {

    /**
     * 解析INI文件或者字符串并返回数组
     * @param string $ini ini文件或者ini字符串
     * @param bool $ispath 参数一是否是字符串
     * @return array
     */
    public static function parse(string $ini,$ispath=true){
        $temp = $ispath ? parse_ini_file($ini) : parse_ini_string($ini);
        $result = [];
        if($temp) foreach ($temp as $name=>$value) {
            if(strpos($name,'.')){
                $name = explode('.',$name);
                $lastindex = count($name) - 1;
                $target = &$result;
                foreach ($name as $i => $nm) {
                    if($i === $lastindex){
                        //还没到最后一个
                        $target[$nm] = $value;
                        break;
                    }else{
                        isset($target[$nm]) or $target[$nm] = [];
                        $target = &$target[$nm];
                    }
                }
            }else{
                $result[$name] = $value;
            }
        }
        return $result;
    }

    public static function create(array $data,string $parent=''){
        $str = '';
        foreach ($data as $key=>$value){
            $key = $parent?"{$parent}.{$key}":$key;
            if(is_array($value)){
                $str .= self::create($value,$key);
            }else{
                $str .= "{$key} = {$value}\r\n";
            }
        }
        return $str;
    }
}